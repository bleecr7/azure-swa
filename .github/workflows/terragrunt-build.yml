name: Terragrunt Dev Automation Workflow
run-name: ${{ github.actor }} terragrunt workflow - ${{ github.ref }}

on: 
  push:
    branches:
      - dev
     
# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

# Set environment variables for the workflow
env:
  WORKING_DIRECTORY: './live/dev' 
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  TF_VAR_TFSTATE_RG_NAME: ${{ vars.TF_VAR_TFSTATE_RG_NAME }}
  TF_VAR_TFSTATE_STORAGE_ACCOUNT_NAME: ${{ vars.TF_VAR_TFSTATE_STORAGE_ACCOUNT_NAME }}
  TF_VAR_TF_STATE_CONTAINER_NAME: ${{ vars.TF_VAR_TF_STATE_CONTAINER_NAME }}

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v5
      
      - name: Check Terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ env.WORKING_DIRECTORY }}
          tg_command: 'hcl fmt'
        
  plan:
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ env.WORKING_DIRECTORY }}
          tg_command: 'run --all --out-dir /github/workspace/ plan'
      
      - name: 'Upload Plan Artifact'
        uses: actions/upload-artifact@v4
        with:
          path: /github/workspace/
          name: terragrunt-plan-artifact
