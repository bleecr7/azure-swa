name: Terragrunt Prod Plan

on:
  pull_request:
    branches:
      - 'main'

# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

# Set environment variables for the workflow
env:
  WORKING_DIRECTORY: './live/prod' 
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  GH_PAT: ${{ secrets.GH_PAT }}
  KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}
  TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
  TF_VAR_TFSTATE_RG_NAME: ${{ vars.TF_VAR_TFSTATE_RG_NAME }}
  TF_VAR_TFSTATE_STORAGE_ACCOUNT_NAME: ${{ vars.TF_VAR_TFSTATE_STORAGE_ACCOUNT_NAME }}
  TF_VAR_TFSTATE_CONTAINER_NAME: ${{ vars.TF_VAR_TFSTATE_CONTAINER_NAME }}

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v5
      
      - name: Check Terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ env.WORKING_DIRECTORY }}
          tg_command: 'hcl fmt'
        
  plan:
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v5

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ env.WORKING_DIRECTORY }}
          tg_command: 'run --all --log-level debug --out-dir /tmp/terragrunt/tfplan/ --json-out-dir /tmp/terragrunt/json/ plan'
      
      - name: 'Show plan output changes'
        run: cat /tmp/terragrunt/json/*/*.json | jq -r 'try (.resource_changes[] | select(.change.actions[0]=="update" or .change.actions[0]=="create" or .change.actions[0]=="delete")) catch "No changes detected"'

      - name: 'Upload Plan Artifact'
        uses: actions/upload-artifact@v4
        with:
          path: /tmp/terragrunt/
          name: terragrunt-plan-artifact

  run-id-update:
    runs-on: ubuntu-latest
    needs: [ plan ]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: 'Update GH env with latest run id'
        run: |
            curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ env.GH_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/LATEST_TG_ID_PROD \
            -d '{"name":"LATEST_TG_ID_PROD","value":"${{ github.run_id }}"}'
