name: Terragrunt Dev Builds

on:
  workflow_run:
    workflows: ['Terragrunt Dev Plan']
    branches:
      - 'dev**'
    types: [completed]
     
# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

# Set environment variables for the workflow
env:
  WORKING_DIRECTORY: './live/dev' 
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}
  TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
  TF_VAR_TFSTATE_RG_NAME: ${{ vars.TF_VAR_TFSTATE_RG_NAME }}
  TF_VAR_TFSTATE_STORAGE_ACCOUNT_NAME: ${{ vars.TF_VAR_TFSTATE_STORAGE_ACCOUNT_NAME }}
  TF_VAR_TFSTATE_CONTAINER_NAME: ${{ vars.TF_VAR_TFSTATE_CONTAINER_NAME }}

jobs:
  apply:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v5

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terragrunt-plan-artifact
          repository: bleecr7/azure-swa
          run-id: ${{ vars.LATEST_TG_ID }}
          path: /tmp/terragrunt/
      
      - name: List plan files
        run: tree /tmp/terragrunt/tfplan/

      - name: Apply
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_dir: ${{ env.WORKING_DIRECTORY }}
          tg_command: 'run --all --log-level debug --out-dir /tmp/terragrunt/tfplan/ apply'

  # build-webapp:
  #   runs-on: ubuntu-latest
  #   needs: [ apply ]
  #   steps:
  #     - name: Download Plan Artifact
  #       uses: actions/download-artifact@v5
  #       with:
  #         name: react-build-dev
  #         github-token: ${{ secrets.GITHUB_TOKEN }} # token with actions:read permissions on target repo
  #         repository: bleecr7/react-playground
  #         run-id: 18732776190
  #         path: ./dist/

  #     - name: 'Check files'
  #       run: tree ./dist/
      
  #     - name: Azure Login
  #       uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: 'Retrieve secret from Key Vault'
  #       id: keyvault
  #       uses: azure/CLI@v2
  #       with:
  #         inlineScript: |
  #           AZURE_STATIC_WEB_APPS_API_TOKEN=$(az keyvault secret show --name dev-swa-api-key --vault-name ${{ secrets.KEY_VAULT_NAME }} --query value -o tsv)
  #           echo "::add-mask::$AZURE_STATIC_WEB_APPS_API_TOKEN"
  #           echo "AZURE_STATIC_WEB_APPS_API_TOKEN=$AZURE_STATIC_WEB_APPS_API_TOKEN" >> $GITHUB_ENV
        
  #     - name: Build and Deploy SWA
  #       uses: Azure/static-web-apps-deploy@v1
  #       with:
  #         azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
  #         action: "upload"
  #         skip_app_build: true
  #         app_location: "./dist/" # App source code path